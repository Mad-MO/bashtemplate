#!/usr/bin/env bash

# Program info
PROG_NAME="prog"
PROG_VERSION="v0.beta1"
PROG_CHECK_FOR_TOOLS="echo date figlet tput"

# Define general colors
COLOR_OFF="\033[0m"

COLOR_BLACK="\033[0;30m"
COLOR_RED="\033[0;31m"
COLOR_GREEN="\033[0;32m"
COLOR_YELLOW="\033[0;33m"
COLOR_BLUE="\033[0;34m"
COLOR_PURPLE="\033[0;35m"
COLOR_CYAN="\033[0;36m"
COLOR_WHITE="\033[0;37m"

COLOR_BOLD_BLACK="\033[1;30m"
COLOR_BOLD_RED="\033[1;31m"
COLOR_BOLD_GREEN="\033[1;32m"
COLOR_BOLD_YELLOW="\033[1;33m"
COLOR_BOLD_BLUE="\033[1;34m"
COLOR_BOLD_PURPLE="\033[1;35m"
COLOR_BOLD_CYAN="\033[1;36m"
COLOR_BOLD_WHITE="\033[1;37m"

# Define Theme colors
COLOR_NORMAL=$COLOR_OFF
COLOR_HEADER=$COLOR_BOLD_RED
COLOR_TIME=$COLOR_BOLD_PURPLE
COLOR_SECTION=$COLOR_BOLD_YELLOW
COLOR_MARK1=$COLOR_BOLD_WHITE
COLOR_MARK2=$COLOR_BOLD_RED
COLOR_MARK3=$COLOR_BOLD_GREEN
COLOR_MARK4=$COLOR_BOLD_BLUE

#################
# Exit function #
#################

# Function to end program with exit code and wait for ENTER to close window, if started as GUI
function ProgExit()
{
  if [ "$PROG_STARTED_IN_GUI" = "1" ] || [ "$MC_SID" ]; then # Started in GUI or Midnight Commander?
    if [ "$1" -ne "0" ]; then
      echo -e "Exitcode $COLOR_MARK1$1$COLOR_NORMAL"
    fi
    echo
    echo -e "Press $COLOR_MARK1""ENTER$COLOR_NORMAL to close window"
    read
  fi

  if [ "$1" ]; then
    exit $1
  else
    exit
  fi
}

########################
# Terminal Environment #
########################

if [ -t 0 ] && [ -t 1 ] && [ -t 2 ]; then # STDIN, STDOUT and STDERR defined?
  if [ "$MC_SID" ]; then # Started in Midnight Commander?
    clear
  fi
  echo -en "$COLOR_NORMAL""Running $COLOR_MARK1$PROG_NAME$COLOR_NORMAL version $COLOR_MARK1$PROG_VERSION$COLOR_NORMAL"
  if [ "$PROG_STARTED_IN_GUI" = 1 ]; then
    echo -en " in $COLOR_MARK1""GUI$COLOR_NORMAL"
  else
    echo -en " in $COLOR_MARK1""Terminal$COLOR_NORMAL"
    if [ "$MC_SID" ]; then # Started in Midnight Commander?
      echo -en " started from $COLOR_MARK1""mc$COLOR_NORMAL"
    fi
  fi
  echo -en " as user $COLOR_MARK1$(id -un)$COLOR_NORMAL"
  if   [ $# -eq 1 ]; then
    echo -e " with parameter $COLOR_MARK1$@$COLOR_NORMAL"
  elif [ $# -gt 1 ]; then
    echo -en " with $COLOR_MARK1$#$COLOR_NORMAL parameters$COLOR_MARK1"
    for x in "$@"; do
      echo -en " \"$x\""
    done
    echo -e "$COLOR_NORMAL"
  else
    echo -e " with $COLOR_MARK1""no$COLOR_NORMAL parameters"
  fi
else
  # No Terminal found, starting GUI
  gnome-terminal --title $PROG_NAME" "$PROG_VERSION -- /usr/bin/env "PROG_STARTED_IN_GUI=1" "$0" "$@"
  exit
fi

##############
# Parameters #
##############

while [ $# -gt 0 ]; do # Parameter given?
  if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "Usage: $0 [OPTION]"
    echo
    echo "Do some fancy stuff..."
    echo
    echo "Options"
    echo "-h, --help      This help"
    echo "-d, --debug     print all executed commands"
    echo
    echo "Exit status:"
    echo " 0  if OK"
    echo " 1  if ERROR"
    ProgExit "0"
  elif [ "$1" = "--debug" ] || [ "$1" = "-d" ]; then
    set -x
    shift
  elif [ "$1" = "--dummy" ]; then
    # Just for parameter testing -> does nothing
    shift
  else
    echo -e "Unknown parameter $COLOR_MARK1$1$COLOR_NORMAL"
    ProgExit "1"
  fi
done

################
# Needed tools #
################

for x in $PROG_CHECK_FOR_TOOLS; do # Run through tool list
  which $x > /dev/null
  if [ $? -ne 0 ]; then
    echo -e "Tool $COLOR_MARK1$x$COLOR_NORMAL is missing!"
    ProgExit "1"
  fi
done

################
# Program info #
################

echo -ne "$COLOR_HEADER"
figlet $PROG_NAME -w $(tput cols)
echo -e "$COLOR_HEADER$PROG_NAME $PROG_VERSION$COLOR_NORMAL"
echo

####################
# Time measurement #
####################

echo -e "Starting $COLOR_TIME$(date '+%Y-%m-%d %H:%M:%S')$COLOR_NORMAL"
PROG_START=$(date '+%s')
echo

##########
# Action #
##########

echo -e "$COLOR_SECTION""Do some magic$COLOR_NORMAL"
echo -e "Scriptname: $COLOR_MARK1$PROG_NAME$COLOR_NORMAL"
echo -e "$COLOR_MARK2""Some ERROR!$COLOR_NORMAL"
sleep 1
echo -e "$COLOR_SECTION""Finished$COLOR_NORMAL"

####################
# Time measurement #
####################

echo
echo -e "Finished $COLOR_TIME$(date '+%Y-%m-%d %H:%M:%S')$COLOR_NORMAL"
PROG_END="$(date '+%s')"
PROG_DURATION="$(( $PROG_END - $PROG_START ))"
echo -e "Duration $COLOR_TIME$PROG_DURATION sec$COLOR_NORMAL"
echo

################
# Exit program #
################

ProgExit "0"
