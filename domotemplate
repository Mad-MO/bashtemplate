#!/usr/bin/env bash

# Script info
script_name="domoTemplate"
script_version="v0.2.1"
script_tools="echo date figlet clear test"


# Handling of colored output
NOCOLOR=0
for paraval in "$@"; do
  if [ "$paraval" = "-n" ] || [ "$paraval" = "--nocolor" ]; then
    NOCOLOR=1
  fi
done
if [ "$NOCOLOR" = "1" ]; then
  color_off=

  color_header=
  color_time=
  color_section=
  color_mark=
  color_error=
else
  color_off="\033[0m"
  color_black="\033[0;30m"
  color_red="\033[0;31m"
  color_green="\033[0;32m"
  color_yellow="\033[0;33m"
  color_blue="\033[0;34m"
  color_purple="\033[0;35m"
  color_cyan="\033[0;36m"
  color_white="\033[0;37m"
  color_bold_black="\033[1;30m"
  color_bold_red="\033[1;31m"
  color_bold_green="\033[1;32m"
  color_bold_yellow="\033[1;33m"
  color_bold_blue="\033[1;34m"
  color_bold_purple="\033[1;35m"
  color_bold_cyan="\033[1;36m"
  color_bold_white="\033[1;37m"

  color_header=$color_bold_red
  color_time=$color_bold_purple
  color_section=$color_bold_yellow
  color_mark=$color_bold_white
  color_error=$color_bold_red
fi

# Function to end script with exit code and wait for ENTER key to close window (if wait on exit requested)
function ScriptExit()
{
  if [ "$WAIT_ON_EXIT" = "1" ]; then # Wait on exit requested?
    if [ "$1" -ne "0" ]; then
      echo -e "Exitcode $color_mark$1$color_off"
    fi
    echo
    echo -e "Press $color_mark""ENTER$color_off to close window"
    read
  fi

  if [ "$1" ]; then
    exit $1
  else
    exit
  fi
}

# Start X-terminal as GUI if requested
if [ "$SCRIPT_STARTED_IN_XGUI" != 1 ]; then
  for paraval in "$@"; do
    if [ "$paraval" = "-x" ] || [ "$paraval" = "--xgui" ]; then
      if [ ! -x xhost ]; then # Tool xhost installed?
        if xhost >& /dev/null ; then # X-session running?
          gnome-terminal --title $script_name" "$script_version -- /usr/bin/env "SCRIPT_STARTED_IN_XGUI=1" "$0" "$@"
          exit
        fi
      fi
    fi
  done
fi

# Handle Terminal Environment
echo -en "$color_off""Running $color_mark$script_name$color_off version $color_mark$script_version$color_off"
if [ "$SCRIPT_STARTED_IN_XGUI" = 1 ]; then
  echo -en " in $color_mark""X$color_off"
else
  SCRIPT_STARTED_IN_XGUI=0
  set -u # From her on warn about empty variables
  echo -en " in $color_mark""Terminal$color_off"
fi
echo -en " as user $color_mark$(id -un)$color_off"
if   [ $# -eq 1 ]; then
  echo -e " with parameter $color_mark\"$@\"$color_off"
elif [ $# -gt 1 ]; then
  echo -en " with $color_mark$#$color_off parameters$color_mark"
  for x in "$@"; do
    echo -en " \"$x\""
  done
  echo -e "$color_off"
else
  echo -e " with $color_mark""no$color_off parameters"
fi

# Check Parameters
WAIT_ON_EXIT=0
while [ $# -gt 0 ]; do # Parameter given?
  if   [ "$1" = "-d" ] || [ "$1" = "--debug" ]; then
    set -x
    shift
  elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: $0 [OPTION]"
    echo
    echo "Do some fancy stuff..."
    echo
    echo "Options"
    echo "-d, --debug     Print all executed commands"
    echo "-h, --help      Print this help"
    echo "-n, --nocolor   Don't color output"
    echo "-w, --wait      Wait on exit"
    echo "-x, --xgui      Start script in X gui window"
    echo
    echo "Exit status:"
    echo " 0  if OK"
    echo " 1  if ERROR"
    ScriptExit 0
  elif [ "$1" = "-n" ] || [ "$1" = "--nocolor" ]; then
    # Do nothing here, this is handled above
    shift
  elif [ "$1" = "-w" ] || [ "$1" = "--wait" ]; then
    WAIT_ON_EXIT=1
    shift
  elif [ "$1" = "-x" ] || [ "$1" = "--xgui" ]; then
    # Do nothing here, starting of gui is handled above
    shift
  else
    echo -e "Unknown parameter $color_mark$1$color_off"
    ScriptExit 1
  fi
done

# Check for needed tools
for x in $script_tools; do # Run through tool list
  which $x > /dev/null
  if [ $? -ne 0 ]; then
    echo -e "Tool $color_mark$x$color_off is missing!"
    ScriptExit 1
  fi
done

# Show script startup info
echo -ne "$color_header"
figlet $script_name -w 100
echo -e "$color_header$script_name $script_version$color_off"
echo

# Start time measurement
echo -e "Starting $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_start=$(date '+%s')
echo

################
# Script Start #
################

sleep 0.5
echo -e "$color_section[Do some magic]$color_off"
sleep 0.5
echo -e "Scriptname: $color_mark$script_name$color_off"
sleep 0.5
echo -e "$color_error""Some ERROR!$color_off"
sleep 0.5

##############
# Script End #
##############

# Stop time measurement
echo
echo -e "Finished $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_end="$(date '+%s')"
script_duration="$(( $script_end - $script_start ))"
echo -e "Duration $color_time$script_duration sec$color_off"
echo

# Exit script
ScriptExit 0

