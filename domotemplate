#!/usr/bin/env bash

#set -x  # Use for debugging: Print all executed commands

# Program version
VERSION="vx.x"

# Define colors
COLOR_BLACK="\033[0;30m"
COLOR_RED="\033[0;31m"
COLOR_GREEN="\033[0;32m"
COLOR_ORANGE="\033[0;33m"
COLOR_BLUE="\033[0;34m"
COLOR_PURPLE="\033[0;35m"
COLOR_CYAN="\033[0;36m"
COLOR_LIGHT_GRAY="\033[0;37m"
COLOR_DARK_GRAY="\033[1;30m"
COLOR_LIGHT_RED="\033[1;31m"
COLOR_LIGHT_GREEN="\033[1;32m"
COLOR_YELLOW="\033[1;33m"
COLOR_LIGHT_BLUE="\033[1;34m"
COLOR_LIGHT_PURPLE="\033[1;35m"
COLOR_LIGHT_CYAN="\033[1;36m"
COLOR_WHITE="\033[1;37m"

# Define some "special" sequences
COLOR_NONE="\033[0m"

##################################
# Check for Terminal Environment #
##################################

if [ -t 0 ] && [ -t 1 ] && [ -t 2 ]; then
  if [ "$STARTED_GUI" = 1 ]; then
    echo -e "Running in $COLOR_WHITE""GUI$COLOR_NONE"
  else
    echo -e "Running in $COLOR_WHITE""Terminal$COLOR_NONE"
  fi
else
  echo "No Terminal found, starting GUI"
  gnome-terminal -- bash -c "STARTED_GUI=1 $0 $@"
  exit
fi

function CleanExit()
{
  if [ "$STARTED_GUI" = "1" ]; then
    if [ "$1" -ne "0" ]; then
      echo -e "Exitcode $COLOR_WHITE$1$COLOR_NONE"
    fi
    echo
    echo -e "Press $COLOR_WHITE""ENTER$COLOR_NONE to close window"
    read
  fi

  if [ "$1" ]; then
    exit $1
  else
    exit
  fi
}

########################
# Check for parameters #
########################

while [ $# -gt 0 ]; do # Parameter given?
  if [ "$1" = "--help" ]; then
    echo "Usage: $0 [OPTION]"
    echo
    echo "Options"
    echo "--help     This help"
    CleanExit "0"
  elif [ "$1" = "--dummy" ]; then
    shift
  else
    echo -e "Unknown parameter $COLOR_WHITE$1$COLOR_NONE"
    CleanExit "1"
  fi
done

##########################
# Check for needed tools #
##########################

NEEDED_TOOLS="echo date   cp mv ls"

for x in $NEEDED_TOOLS; do
  which $x > /dev/null
  if [ $? -ne 0 ]; then
    echo -e "Tool $COLOR_WHITE$x$COLOR_NONE is missing!"
    CleanExit "1"
  fi
done

###############
# Starting up #
###############

echo -ne "$COLOR_LIGHT_RED"
echo
echo " _ __  _ __ ___   __ _ "
echo "| '_ \| '__/ _ \ / _\` |"
echo "| |_) | | | (_) | (_| |"
echo "| .__/|_|  \___/ \__, |"
echo "|_|              |___/ "
echo -e "$COLOR_RED""prog $COLOR_LIGHT_RED$VERSION"
echo -ne "$COLOR_NONE"
echo

###########
# Prepare #
###########

# Start time
echo -e "Starting $COLOR_LIGHT_PURPLE$(date '+%Y-%m-%d %H:%M:%S')$COLOR_NONE"
START=$(date '+%s')

# Show user
echo -e "Running as user $COLOR_WHITE$(id -un)$COLOR_NONE"

# Show parameters
if [ $# -gt 0 ]; then
  echo -e "Using parameters $COLOR_WHITE$@$COLOR_NONE"
else
  echo -e "Using $COLOR_WHITE""no$COLOR_NONE parameters"
fi

echo

##########
# Action #
##########



echo -e "$COLOR_YELLOW""Do some magic$COLOR_NONE"
echo -e "Scriptname: $COLOR_WHITE$0$COLOR_NONE"
sleep 1
echo -e "$COLOR_YELLOW""Finished$COLOR_NONE"



################
# Finishing up #
################

echo
echo -e "Finished $COLOR_LIGHT_PURPLE$(date '+%Y-%m-%d %H:%M:%S')$COLOR_NONE"
END="$(date '+%s')"
echo -e "Prog took $COLOR_LIGHT_PURPLE$(( $END - $START )) seconds$COLOR_NONE"
echo

CleanExit "0"
