#!/usr/bin/env bash

# Program info
PROG_NAME="prog"
PROG_VERSION="v0.beta1"
PROG_CHECK_FOR_TOOLS="echo date"

# Define colors
SHELL_COLOR_OFF="\033[0m"

SHELL_COLOR_BLACK="\033[0;30m"
SHELL_COLOR_RED="\033[0;31m"
SHELL_COLOR_GREEN="\033[0;32m"
SHELL_COLOR_YELLOW="\033[0;33m"
SHELL_COLOR_BLUE="\033[0;34m"
SHELL_COLOR_PURPLE="\033[0;35m"
SHELL_COLOR_CYAN="\033[0;36m"
SHELL_COLOR_WHITE="\033[0;37m"

SHELL_COLOR_BOLD_BLACK="\033[1;30m"
SHELL_COLOR_BOLD_RED="\033[1;31m"
SHELL_COLOR_BOLD_GREEN="\033[1;32m"
SHELL_COLOR_BOLD_YELLOW="\033[1;33m"
SHELL_COLOR_BOLD_BLUE="\033[1;34m"
SHELL_COLOR_BOLD_PURPLE="\033[1;35m"
SHELL_COLOR_BOLD_CYAN="\033[1;36m"
SHELL_COLOR_BOLD_WHITE="\033[1;37m"

# Define Theme colors
COLOR_NORMAL=$SHELL_COLOR_OFF
COLOR_HEADER=$SHELL_COLOR_BOLD_RED
COLOR_TIMING=$SHELL_COLOR_BOLD_PURPLE
COLOR_SECTION=$SHELL_COLOR_BOLD_YELLOW
COLOR_ERROR=$SHELL_COLOR_BOLD_RED
COLOR_MARK=$SHELL_COLOR_BOLD_WHITE

# Function to end program with exit code and wait for ENTER to close window, if started as GUI
function ProgExit()
{
  if [ "$STARTED_GUI" = "1" ] || [ "$MC_SID" ]; then
    if [ "$1" -ne "0" ]; then
      echo -e "Exitcode $COLOR_MARK$1$COLOR_NORMAL"
    fi
    echo
    echo -e "Press $COLOR_MARK""ENTER$COLOR_NORMAL to close window"
    read
  fi

  if [ "$1" ]; then
    exit $1
  else
    exit
  fi
}

########################
# Terminal Environment #
########################

if [ -t 0 ] && [ -t 1 ] && [ -t 2 ]; then # STDIN, STDOUT and STDERR defined?
  echo -en "$COLOR_NORMAL""Running $COLOR_MARK$PROG_NAME$COLOR_NORMAL version $COLOR_MARK$PROG_VERSION$COLOR_NORMAL"
  if [ "$STARTED_GUI" = 1 ]; then
    echo -en " in $COLOR_MARK""GUI$COLOR_NORMAL"
  elif [ "$MC_SID" ];then
    clear
    echo -en " in $COLOR_MARK""Terminal$COLOR_NORMAL started from $COLOR_MARK""mc$COLOR_NORMAL"
  else
    echo -en " in $COLOR_MARK""Terminal$COLOR_NORMAL"
  fi
  echo -en " as user $COLOR_MARK$(id -un)$COLOR_NORMAL"
  if   [ $# -gt 1 ]; then
    echo -e " with $COLOR_MARK$#$COLOR_NORMAL parameters $COLOR_MARK$@$COLOR_NORMAL"
  elif [ $# -gt 0 ]; then
    echo -e " with parameter $COLOR_MARK$@$COLOR_NORMAL"
  else
    echo -e " with $COLOR_MARK""no$COLOR_NORMAL parameters"
  fi
else
  # No Terminal found, starting GUI
  gnome-terminal --title $PROG_NAME" "$PROG_VERSION -- /usr/bin/env "PROG_STARTED_IN_GUI=1" "$0" "$@"
  exit
fi

##############
# Parameters #
##############

while [ $# -gt 0 ]; do # Parameter given?
  if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "Usage: $0 [OPTION]"
    echo
    echo "Do some fancy stuff..."
    echo
    echo "Options"
    echo "-h, --help      This help"
    echo "-d, --debug     print all executed commands"
    echo
    echo "Exit status:"
    echo " 0  if OK"
    echo " 1  if ERROR"
    ProgExit "0"
  elif [ "$1" = "--debug" ] || [ "$1" = "-d" ]; then
    set -x
    shift
  elif [ "$1" = "--dummy" ]; then
    # Just for parameter testing -> does nothing
    shift
  else
    echo -e "Unknown parameter $COLOR_MARK1$1$COLOR_NORMAL"
    ProgExit "1"
  fi
done

################
# Needed tools #
################

for x in $PROG_CHECK_FOR_TOOLS; do # Run through tool list
  which $x > /dev/null
  if [ $? -ne 0 ]; then
    echo -e "Tool $COLOR_MARK$x$COLOR_NORMAL is missing!"
    ProgExit "1"
  fi
done

################
# Program info #
################

echo -ne "$COLOR_HEADER"
echo " _ __  _ __ ___   __ _ "
echo "| '_ \| '__/ _ \ / _\` |"
echo "| |_) | | | (_) | (_| |"
echo "| .__/|_|  \___/ \__, |"
echo "|_|              |___/ "
echo -e "$COLOR_HEADER$PROG_NAME $PROG_VERSION$COLOR_NORMAL"
echo

####################
# Time measurement #
####################

echo -e "Starting $COLOR_TIMING$(date '+%Y-%m-%d %H:%M:%S')$COLOR_NORMAL"
PROG_START=$(date '+%s')
echo

##########
# Action #
##########



echo -e "$COLOR_SECTION""Do some magic$COLOR_NORMAL"
echo -e "Scriptname: $COLOR_MARK$PROG_NAME$COLOR_NORMAL"
echo -e "$COLOR_ERROR""Some ERROR!$COLOR_NORMAL"
sleep 1
echo -e "$COLOR_SECTION""Finished$COLOR_NORMAL"



####################
# Time measurement #
####################

echo
echo -e "Finished $COLOR_TIMING$(date '+%Y-%m-%d %H:%M:%S')$COLOR_NORMAL"
PROG_END="$(date '+%s')"
PROG_DURATION="$(( $PROG_END - $PROG_START ))"
echo -e "Duration $COLOR_TIMING$PROG_DURATION sec$COLOR_NORMAL"
echo

################
# Exit program #
################

ProgExit "0"
