#!/usr/bin/env bash

# File:    # TODO: Filename
# Author:  # TODO: Author
# License: MIT
# Brief:   # TODO: Description

# Script info
script_name="bashtemplate" # TODO: Set your script name
script_version="v0.4"      # TODO: Set your script version
script_tools="echo date"   # TODO: List all your needed tools

# Definition of colors
color_off="\033[0m"
color_black="\033[0;30m"
color_red="\033[0;31m"
color_green="\033[0;32m"
color_yellow="\033[0;33m"
color_blue="\033[0;34m"
color_purple="\033[0;35m"
color_cyan="\033[0;36m"
color_white="\033[0;37m"
color_bold_black="\033[1;30m"
color_bold_red="\033[1;31m"
color_bold_green="\033[1;32m"
color_bold_yellow="\033[1;33m"
color_bold_blue="\033[1;34m"
color_bold_purple="\033[1;35m"
color_bold_cyan="\033[1;36m"
color_bold_white="\033[1;37m"

# Definition of used theme colors
color_header=$color_bold_red
color_time=$color_bold_purple
color_section=$color_bold_yellow
color_mark=$color_bold_green
color_error=$color_bold_red


# Activate debug output (uncomment if needed)
#set -x

# From here on warn about unset variables
set -u

# Show Terminal Environment and script startup info
echo -en "$color_off""Running $color_mark$script_name$color_off version $color_mark$script_version$color_off as user $color_mark\"$(id -un)\"$color_off"
if   [ $# -eq 1 ]; then
  echo -e " with parameter $color_mark\"$@\"$color_off"
elif [ $# -gt 1 ]; then
  echo -en " with $color_mark$#$color_off parameters"
  for x in "$@"; do
    echo -en " $color_mark\"$x\"$color_off"
  done
else
  echo -e " with $color_mark""no""$color_off parameters"
fi
echo

# TODO: Implement your script parameters
# Check Parameters
while [ $# -gt 0 ]; do # Parameter given?
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: $0 [OPTION]"
    echo
    echo "Do some fancy stuff..."
    echo
    echo "Options"
    echo "-h, --help      Print this help"
    echo "-n, --nocolor   Don't color output"
    echo
    echo "Exit status:"
    echo " 0  if OK"
    echo " 1  if ERROR"
    exit 0
  elif [ "$1" = "-n" ] || [ "$1" = "--nocolor" ]; then
    color_off=
    color_header=
    color_time=
    color_section=
    color_mark=
    color_error=
    shift
  elif [ "$1" = "-w" ] || [ "$1" = "--wait" ]; then
    shift
  else
    echo -e "Unknown parameter $color_mark$1$color_off"
    exit 1
  fi
done

# TODO: Implement your script banner here (generate via figlet)
# Show script startup info
echo -ne "$color_header"
echo " _____                    _       _       "
echo "|_   _|__ _ __ ___  _ __ | | __ _| |_ ___ "
echo "  | |/ _ \ '_ \` _ \| '_ \| |/ _\` | __/ _ \\"
echo "  | |  __/ | | | | | |_) | | (_| | ||  __/"
echo "  |_|\___|_| |_| |_| .__/|_|\__,_|\__\___|"
echo "                   |_|                    "
echo -e "$color_header$script_name $script_version$color_off"
echo

# Check for needed tools
for x in $script_tools; do # Run through tool list
  which $x > /dev/null
  if [ $? -ne 0 ]; then
    echo -e "Tool $color_mark$x$color_off is missing!"
    exit 1
  fi
done

# Start time measurement
echo -e "Starting $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_start=$(date '+%s')
echo

##############################################
# Script Start - Implement your script below #
###############################################################################



# TODO: Implement your script here
echo -e "$color_section[Example section]$color_off"
echo -e "Example output with highlighted $color_mark""INFO$color_off"
echo -e "Example $color_error""ERROR$color_off"
echo -n "Some timeout to demonstrate time measurement: "
for i in {1..30}; do
  sleep 0.1
  echo -n "."
done
echo



###############################################################################
# Script End - Implement your script above #
############################################

# Stop time measurement
echo
echo -e "Finished $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_end="$(date '+%s')"
script_duration="$(( $script_end - $script_start ))"
echo -e "Duration $color_time$script_duration sec$color_off"
echo

# Exit script
exit 0
